{% extends 'base.html.twig' %}

{% block title %}Gestion des rôles: listes{% endblock %}

{# {% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('css/gestion_utilisateur.css') }}">
{% endblock %} #}

{% block page_title %}
    Demandeur
{% endblock %}
{% block page_subtitle %}
    Information de la demande
{% endblock %}

{% block page_main_content %}
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Ajout de pièce justificative</h4>
                </div>
                <form id="formulaire" action="{{ path('dm.image', {'id': demande_type.Id}) }}"
                      enctype="multipart/form-data">
                    <div class="card-body d-flex flex-column gap-2">
                        <div class="col-12 d-flex flex-row">
                            <label class="form-control-lg col-3"> Référence: </label>
                            <div class="col form-control">
                                {{ demande_type.RefDemande }}
                            </div>
                        </div>
                        <div class="col-12 d-flex flex-row">
                            <label class="form-control-lg col-3"> Montant reçu: </label>
                            <div class="col form-control form-control">
                                {{ demande_type.DmMontant|number_format(2, '.', ' ') }} Ar
                            </div>
                        </div>
                        <div class="col-12 d-flex flex-row">
                            <label for="montant_reel" class="col-3 form-control-lg"> Montant utilisé: </label>
                            <div class="input-group mb-3">
                                <input
                                        type="number"
                                        class="form-control"
                                        step="0.01"
                                        aria-label="Amount (to the nearest dollar)"
                                        name="montant_reel"
                                        value="{{ demande_type.DmMontant }}"
                                />
                                <span class="input-group-text">Ar</span>
                            </div>
                        </div>
                        <div class="col-12 d-flex flex-row">
                            <label class="col-3 form-control-lg">
                                Choix de fichier:
                            </label>
                            <div class="col d-flex flex-column gap-1">
                                <div class="col-12">
                                    <!--
                                    <label class="selectgroup-item">
                                        <input class="selectgroup-input" type="radio" name="type" value="bon_livraison">
                                        <span class="selectgroup-button">
                                            Facture de payement ou bon de livraison
                                        </span>
                                    </label>
                                    -->

                                    <label class="selectgroup-item">
                                        <input class="selectgroup-input" type="radio" name="type"
                                               value="bon_livraison" checked="checked">
                                        <span class="selectgroup-button">PJ bon de livraison</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 input-group">
                            <label class="col-3 form-control-lg" for="image">Choisisse le fichier :</label>
                            <!--<input class="col form-control-file" type="file" id="image" name="image">-->
                            <div class="col input-group">
                                <label class="input-group-text" for="customFile">
                                    <i class="bi bi-file-earmark-image">PJ</i>
                                </label>
                                <input type="file" class="form-control visually-hidden"
                                       id="customFile" accept="image/*,.xls,.xlsx,.txt,.pdf"
                                       onchange="showFiles(this)" name="image[]" multiple>
                                <button class="btn bg-dark-subtle" type="button"
                                        onclick="document.getElementById('customFile').click()">
                                    parcourir les documents
                                </button>
                            </div>
                        </div>
                        <div class="d-flex gap-4 py-5 px-4">
                            <div class="row" id="imagePreviews"></div>
                        </div>
                    </div>
                    <div class="card-footer d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="button" id="annuler" class="btn btn-secondary">Annuler</button>
                        <button type="submit" id="valider" class="btn btn-primary">Valider</button>

                    </div>
                </form>
            </div>
        </div>
    </div>

    <style>

    </style>

    <script>
        var form = document.getElementById('formulaire');
        document.getElementById('valider').addEventListener('click', function (e) {
            e.preventDefault()
            fetch(form.action, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: new FormData(form)
            })
                .then(response => {
                    // Vérifie si la réponse est OK (status entre 200 et 299)
                    if (!response.ok) {
                        throw new Error('Erreur réseau : ' + response.status);
                    }
                    // Convertir la réponse en JSON
                    return response.json();
                })
                .then(data => {
                    // Affichez les données reçues du contrôleur
                    //console.log(data); // Affiche tout l'objet de données reçu
                    //console.log(data.message); // Affiche une propriété spécifique, si elle existe
                    //alert(data.path); // Affiche un message reçu du contrôleur
                    if (data.success == false) {
                        alert(data.message)
                    } else {
                        //Manao redirect makany amin'ny list demande en attente
                        window.location.href = data.path;
                    }
                })
                .catch(error => console.error('Erreur:', error));
        });

        document.getElementById('annuler').addEventListener('click', function (e) {
            e.preventDefault()
            window.location.href = '/sg';
        });


        function showFiles(input) {
            const previewsContainer = document.getElementById('imagePreviews');
            previewsContainer.innerHTML = '';
            const files = input.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const reader = new FileReader();
                const preview = document.createElement('div');
                preview.classList.add('col-md-4', 'mb-3');

                // Vérifiez le type de fichier
                if (file.type.match('image.*')) {
                    // Si c'est une image, lisez-la et affichez-la
                    reader.onload = function (e) {
                        preview.innerHTML = `
                    <img src="${e.target.result}" alt="Preview" class="img-fluid rounded">
                    <div class="text-center">
                        <span class="badge bg-secondary">${file.name}</span>
                    </div>
                `;
                        previewsContainer.appendChild(preview);
                    };
                    reader.readAsDataURL(file);
                } else if (file.type === 'application/pdf') {
                    // Si c'est un fichier PDF, affichez une icône PDF
                    preview.innerHTML = `
                <div class="text-center">
                    <i class="fas fa-file-pdf fa-3x text-danger"></i>
                    <div class="mt-2">
                        <span class="badge bg-secondary">${file.name}</span>
                    </div>
                </div>
            `;
                    previewsContainer.appendChild(preview);
                } else if (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||
                    file.type === 'application/vnd.ms-excel') {
                    // Si c'est un fichier Excel, affichez une icône Excel
                    preview.innerHTML = `
                <div class="text-center">
                    <i class="fas fa-file-excel fa-3x text-success"></i>
                    <div class="mt-2">
                        <span class="badge bg-secondary">${file.name}</span>
                    </div>
                </div>
            `;
                    previewsContainer.appendChild(preview);
                } else {
                    // Pour tous les autres types de fichiers, affichez simplement leur nom
                    preview.innerHTML = `
                <div class="text-center">
                    <i class="fas fa-file fa-3x text-secondary"></i>
                    <div class="mt-2">
                        <span class="badge bg-secondary">${file.name}</span>
                    </div>
                </div>
            `;
                    previewsContainer.appendChild(preview);
                }
            }
        }

    </script>


{% endblock %}

{% block javascripts %}
    <!-- Datatables -->
    <script src="{{ asset("js/plugin/datatables/datatables.min.js") }}"></script>
{% endblock %}
