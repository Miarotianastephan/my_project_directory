{% extends 'base.html.twig' %}

{% block title %}Comptable{% endblock %}

{% block page_title %}
    Comptable
{% endblock %}

{% block page_subtitle %}
    Ajout de dépense directe
{% endblock %}

{% block page_main_content %}

    <div class="row">
        <div class="col-md-12">
            <div class="card ">
                <div class="card-header">
                    <h4 class="card-title">Ajout des dépenses directes</h4>
                </div>
                <form id="formulaire" action="{{ path('comptable.graphe')}}" method="post">
                    <div class="card-body d-flex flex-column gap-2 py-5 px-5">
                        <div class="col-12 d-flex flex-row ">
                            <label for="entite" class="col-3 form-control-lg">
                                Entitté concernée
                            </label>
                            <div class="col">
                                <select name="entite" id="entite" class="form-select form-control">
                                    {% for entite in liste_entite %}
                                        <option value="{{ entite.Id }}">{{ entite.CptLibelle }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-12 d-flex flex-row">
                            <label for="transaction" class="col-3 form-control-lg">
                                Choix opération/
                                type de transaction
                            </label>
                            <div class="col">
                                <select name="transaction" id="transaction" class="form-select form-control">
                                    {% for opperation in list_opp %}
                                        <option value="{{ opperation.Id }}">{{ opperation.TrsCode }} - {{ opperation.TrsLibelle }}trs_libelle</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-12 d-flex flex-row">
                            <label for="plan_compte" class="col-3 form-control-lg">
                                Compte n°
                            </label>
                            <div class="col">
                                <select name="plan_compte" id="plan_compte" class="form-select form-control">
                                    <!-- Options dynamiques insérées ici par JavaScript -->
                                </select>
                            </div>
                        </div>
                        <div class="col-12 d-flex flex-row">
                            <label for="montant" class="col-3 form-control-lg"> Montant </label>
                            <div class="col">
                                <input class="form-control form-control" type="number" id="montant" name="montant"
                                       step="0.01">
                            </div>
                        </div>
                    </div>
                    <div class="card-footer d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="submit" id="valider" class="btn btn-primary">Valider</button>
                        <button type="button" id="annuler" class="btn btn-secondary">Annuler</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

{% endblock %}

{% block js_script %}
    <script>
        function sendData (){
            var form = document.getElementById('formulaire');
            document.getElementById('valider').addEventListener('click', function (e) {
                e.preventDefault()
                fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: new FormData(form)
                })
                    .then(response => {
                        // Vérifie si la réponse est OK (status entre 200 et 299)
                        if (!response.ok) {
                            throw new Error('Erreur réseau : ' + response.status);
                        }
                        // Convertir la réponse en JSON
                        return response.json();
                    })
                    .then(data => {
                        data.message

                    })
                    .catch(error => console.error('Erreur:', error));
            });
        }
    </script>
    <script>
        // Données PHP envoyées à JavaScript
        const transactionCompteMap = {{ transactionCompteMap|raw }};


        // Fonction pour mettre à jour les comptes en fonction de l'opération sélectionnée
        function updatePlanCompteOptions() {
            const transactionSelect = document.getElementById('transaction');
            const planCompteSelect = document.getElementById('plan_compte');

            // Obtenir la valeur sélectionnée
            const selectedTransactionId = transactionSelect.value;

            // Vider les options actuelles
            planCompteSelect.innerHTML = '';

            // Ajouter de nouvelles options basées sur les comptes associés
            if (transactionCompteMap[selectedTransactionId]) {
                transactionCompteMap[selectedTransactionId].forEach(compte => {
                    const option = document.createElement('option');
                    option.value = compte.id;
                    option.textContent = `${compte.numero} - ${compte.libelle}`;
                    planCompteSelect.appendChild(option);
                });
            }
        }

        // Ajouter un écouteur d'événement pour détecter les changements sur le select d'opération
        document.getElementById('transaction').addEventListener('change', updatePlanCompteOptions);

        // Initialiser les options au chargement de la page
        document.addEventListener('DOMContentLoaded', updatePlanCompteOptions);
    </script>
{% endblock %}
