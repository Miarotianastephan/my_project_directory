{% extends 'base.html.twig' %}

{% block title %}BFM Application de comptabilité en intranet{% endblock %}

{% block page_title %}
    Tableau de bord
{% endblock %}

{% block page_subtitle %}
    Tableau de mise en relation des Fonds, Situation de caisse et Solde comptable
{% endblock %}

{% block page_main_content %}
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title">Comparaison de l'état de caisse <span
                    id="monthYearDisplay"> semestre {{ semestre }} - {{ annee }}</span></div>
                </div>
                <div class="card-body">
                    <form method="get" id="formulaire" action="{{ path('comptable.graphe') }}">
                        <div class="col-12 d-md-flex justify-content-md-end mb-3">
                            <div class="form-group form-inline col-2">
                                <label for="semestre" class="mr-2">Semestre</label>
                                <select class="form-select" id="semestre" name="semestre">
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                </select>
                            </div>
                            <div class="form-group form-inline col-2 ml-3">
                                <label for="annee" class="mr-2">Année</label>
                                <input
                                        type="number"
                                        class="form-control form-control-sm"
                                        id="annee"
                                        name="annee"
                                        value="{{ annee }}"
                                />
                            </div>
                            <button style="max-height: 50px; overflow: hidden; margin-top: 2%" type="submit" class="btn btn-primary btn-sm ml-3">Valider</button>
                        </div>
                    </form>
                    <div class="chart-container" style="min-height: 55vh">
                        <canvas id="comparisonBarChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        var labels = {{ labels|json_encode|raw }};
        var fond = {{ fond|json_encode|raw }};
        var caisse = {{ caisse|json_encode|raw }};
        var sold = {{ sold|json_encode|raw }};
        var semestre = "{{ semestre }}";
        var annee = {{ annee }};
        var myComparisonBarChart;

        document.addEventListener("DOMContentLoaded", function () {
            const ctx = document.getElementById("comparisonBarChart").getContext("2d");
            const monthYearDisplay = document.getElementById("monthYearDisplay");

            // Fonction pour créer ou mettre à jour le graphique
            function createOrUpdateChart(labels, fond, caisse, sold, semestre, annee) {
                if (myComparisonBarChart) {
                    myComparisonBarChart.data.labels = labels;
                    myComparisonBarChart.data.datasets[0].data = fond;
                    myComparisonBarChart.data.datasets[1].data = caisse;
                    myComparisonBarChart.data.datasets[2].data = sold;
                    myComparisonBarChart.update();
                } else {
                    myComparisonBarChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [
                                {
                                    label: "Budget",
                                    data: fond,
                                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                    borderColor: 'rgba(75, 192, 192, 1)',
                                    borderWidth: 1
                                },
                                {
                                    label: "Chèque",
                                    data: caisse,
                                    backgroundColor: 'rgba(255, 159, 64, 0.2)',
                                    borderColor: 'rgba(255, 159, 64, 1)',
                                    borderWidth: 1
                                },
                                {
                                    label: "espèce",
                                    data: sold,
                                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                                    borderColor: 'rgba(153, 102, 255, 1)',
                                    borderWidth: 1
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            },
                            plugins: {
                                legend: {
                                    position: 'top',
                                }
                            }
                        }
                    });
                }
                // Mettre à jour l'affichage du semestre et de l'année
                monthYearDisplay.textContent = semestre + " - " + annee;
            }

            // Créer le graphique initial
            createOrUpdateChart(labels, fond, caisse, sold, semestre, annee);

            // Gérer la soumission du formulaire
            document.getElementById('formulaire').addEventListener('submit', function (e) {
                e.preventDefault();

                const formData = new FormData(this);
                const url = this.action + '?' + new URLSearchParams(formData).toString();

                fetch(url, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        createOrUpdateChart(data.labels, data.fond, data.caisse, data.sold, data.semestre, data.annee);
                    })
                    .catch(error => console.error('Error:', error));
            });
        });
    </script>
{% endblock %}
